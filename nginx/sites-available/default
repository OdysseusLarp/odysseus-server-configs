server {

	root /var/www/html;

	index index.html index.htm index.nginx-debian.html;

	server_name odysseuslarp.dev;

	# Redirect
	location / {
		return 301 https://www.odysseuslarp.com;
	}

	listen 443 ssl; # managed by Certbot
	ssl_certificate /etc/letsencrypt/live/apps.odysseuslarp.dev/fullchain.pem; # managed by Certbot
	ssl_certificate_key /etc/letsencrypt/live/apps.odysseuslarp.dev/privkey.pem; # managed by Certbot
	include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
	ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

server {

	root /var/www/html;

	index index.html index.htm index.nginx-debian.html;

	server_name apps.odysseuslarp.dev;

	auth_basic "Login required";
	auth_basic_user_file /etc/nginx/.htpasswd; 

	# Backend API proxy
	location / {
		proxy_pass http://localhost:8888;
		# add_header Access-Control-Allow-Origin *;
		proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
		if ($request_method = 'OPTIONS') {
			# add_header 'Access-Control-Allow-Origin' '*';
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
			add_header 'Access-Control-Allow-Headers' 'Authorization,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
			add_header 'Access-Control-Max-Age' 1728000;
			add_header 'Content-Type' 'text/plain; charset=utf-8';
			add_header 'Content-Length' 0;
			return 204;
		}
		if ($request_method = 'POST') {
			# add_header 'Access-Control-Allow-Origin' '*';
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
			add_header 'Access-Control-Allow-Headers' 'Authorization,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
			add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
		}
		if ($request_method = 'GET') {
			# add_header 'Access-Control-Allow-Origin' '*';
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
			add_header 'Access-Control-Allow-Headers' 'Authorization,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
			add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
		}
	}

	# Backend Swagger API docs
	location ~* ^/api-docs.json$ {
		proxy_pass http://localhost:8888;
		auth_basic off;
	}

	# Make websockets work
	location /socket.io {
		proxy_pass http://localhost:8888/socket.io;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
		auth_basic off;
	}

	# Story admin frontend
	location /storyadmin {
		alias /home/odysseus/odysseus/admin-story/;
		try_files $uri $uri/ index.html =404;
	}

	# EOC Datahub frontend
	location /social {
		alias /home/odysseus/odysseus/social/;
		try_files $uri $uri/ index.html =404;
	}

	# Jump UI frontend
	location /jumpui {
		alias /home/odysseus/odysseus/jumpui/;
		try_files $uri $uri/ index.html =404;
	}

	# HANSCA
	location /hansca {
		alias /home/odysseus/odysseus/hansca/;
		try_files $uri $uri/ index.html =404;
	}

	# Admin UI Frontend
	location /adminui {
		alias /home/odysseus/odysseus/adminui/;
		try_files $uri $uri/ index.html =404;
	}

	# Misc UI
	location /misc {
		alias /home/odysseus/odysseus/misc-ui/;
		# Don't ask
		add_header Content-Security-Policy "script-src 'self' 'unsafe-inline' 'unsafe-eval' *.youtube.com maps.gstatic.com *.googleapis.com *.google-analytics.com cdnjs.cloudflare.com assets.zendesk.com connect.facebook.net; frame-src 'self' *.youtube.com assets.zendesk.com *.facebook.com s-static.ak.facebook.com tautt.zendesk.com; object-src 'self'";
	}

	# GeoServer proxy
	location /geoserver {
		proxy_pass http://10.133.0.3:8080/geoserver;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header Authorization "";
	}

	# OpenMCT
	location /mct/ {
		proxy_pass http://localhost:8080/;
	}

	# Goaccess report
	location = /logs.html {
		alias /home/odysseus/odysseus/logs.html;
	}

	listen 443 ssl; # managed by Certbot
	ssl_certificate /etc/letsencrypt/live/apps.odysseuslarp.dev/fullchain.pem; # managed by Certbot
	ssl_certificate_key /etc/letsencrypt/live/apps.odysseuslarp.dev/privkey.pem; # managed by Certbot
	include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
	ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

server {
		if ($host = apps.odysseuslarp.dev) {
				return 301 https://$host$request_uri;
		} # managed by Certbot


		if ($host = odysseuslarp.dev) {
				return 301 https://$host$request_uri;
		} # managed by Certbot


	listen 80 default_server;

	server_name apps.odysseuslarp.dev, odysseuslarp.dev;
		return 404; # managed by Certbot
}
server {
		if ($host = odysseuslarp.dev) {
				return 301 https://$host$request_uri;
		} # managed by Certbot

	server_name odysseuslarp.dev;
		listen 80;
		return 404; # managed by Certbot
}
