server {

	root /var/www/html;

	index index.html index.htm index.nginx-debian.html;

	server_name odysseus-server.live.odysseuslarp.dev live.odysseuslarp.dev default_server;

	# Backend API proxy
	location / {
		proxy_pass http://localhost:8888;
		# add_header Access-Control-Allow-Origin *;
		proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
		if ($request_method = 'OPTIONS') {
			# add_header 'Access-Control-Allow-Origin' '*';
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
			add_header 'Access-Control-Allow-Headers' 'Authorization,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
			add_header 'Access-Control-Max-Age' 1728000;
			add_header 'Content-Type' 'text/plain; charset=utf-8';
			add_header 'Content-Length' 0;
			return 204;
		}
		if ($request_method = 'POST') {
			# add_header 'Access-Control-Allow-Origin' '*';
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
			add_header 'Access-Control-Allow-Headers' 'Authorization,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
			add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
		}
		if ($request_method = 'GET') {
			# add_header 'Access-Control-Allow-Origin' '*';
			add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
			add_header 'Access-Control-Allow-Headers' 'Authorization,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
			add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
		}
	}

	# Backend Swagger API docs
	location ~* ^/api-docs.json$ {
		proxy_pass http://localhost:8888;
		auth_basic off;
	}

	# Make websockets work
	location /socket.io {
		proxy_pass http://localhost:8888/socket.io;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
		auth_basic off;
	}

	# Story admin frontend
	location /storyadmin {
		alias /var/www/odysseus/admin-story/;
		try_files $uri $uri/ index.html =404;
	}

	# EOC Datahub frontend
	location /social {
		alias /var/www/odysseus/social/;
		try_files $uri $uri/ index.html =404;
	}

	# Jump UI frontend
	location /jumpui {
		alias /var/www/odysseus/jumpui/;
		try_files $uri $uri/ index.html =404;
	}

	# HANSCA
	location /hansca {
		alias /var/www/odysseus/hansca/;
		try_files $uri $uri/ index.html =404;
	}

	# Admin UI Frontend
	location /adminui {
		alias /var/www/odysseus/adminui/;
		try_files $uri $uri/ index.html =404;
	}

	# Misc UI
	location /misc {
		alias /var/www/odysseus/misc-ui/;
		# Don't ask
		add_header Content-Security-Policy "script-src 'self' 'unsafe-inline' 'unsafe-eval' *.youtube.com maps.gstatic.com *.googleapis.com *.google-analytics.com cdnjs.cloudflare.com assets.zendesk.com connect.facebook.net; frame-src 'self' *.youtube.com assets.zendesk.com *.facebook.com s-static.ak.facebook.com tautt.zendesk.com; object-src 'self'";
	}

	# GeoServer proxy
	location /geoserver {
		proxy_pass http://localhost:8070/geoserver;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header Authorization "";
	}

	# OpenMCT
	location /mct/ {
		proxy_pass http://localhost:8080/;
	}

	# Gene samples
	location ~ ^/gene-samples/.*\.pdf$ {
		root /var/www/odysseus/;
		try_files $uri =404;
	}

	# Images from https://github.com/OdysseusLarp/odysseus-misc-ui/tree/master/images
	location /images {
		root /var/www/odysseus;
		try_files $uri =404;
	}

	location /favicon.ico {
		alias /var/www/odysseus/favicon.ico;
	}

	# Videos for misc-ui Starfield (airlock window) view
	location /videos/ {
		root /var/www/odysseus;
		mp4;
		mp4_buffer_size 1M;
		mp4_max_buffer_size 5M;
	}

	listen 80;
	listen 443 ssl; # managed by Certbot
	ssl_certificate /etc/letsencrypt/live/live.odysseuslarp.dev/fullchain.pem; # managed by Certbot
	ssl_certificate_key /etc/letsencrypt/live/live.odysseuslarp.dev/privkey.pem; # managed by Certbot
	# include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
	# ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

